package com.minkang.ultimate.titles;
import org.bukkit.*; import org.bukkit.command.*; import org.bukkit.entity.Player; import org.bukkit.inventory.*; import org.bukkit.inventory.meta.*; import org.bukkit.persistence.*;
import java.util.*;
public class ColorChatCommand implements CommandExecutor { private final Main plugin; private final ColorChatService service; private final ColorChatGUI gui; private final NamespacedKey key;
public ColorChatCommand(Main plugin, ColorChatService service, ColorChatGUI gui){ this.plugin=plugin; this.service=service; this.gui=gui; this.key=new NamespacedKey(plugin,"colorchat"); }
@Override public boolean onCommand(CommandSender s, Command c, String l, String[] a){ if(a.length==0){ if(!(s instanceof Player)){ s.sendMessage(plugin.msg("colorchat.need_player")); return true; } gui.open((Player)s); return true; }
 if("지급".equalsIgnoreCase(a[0])){ if(!s.isOp()){ s.sendMessage(plugin.msg("colorchat.need_op")); return true; } if(!(s instanceof Player)){ s.sendMessage(plugin.msg("colorchat.need_player")); return true; } if(a.length<2){ s.sendMessage("/색깔채팅 지급 <색깔>"); return true; } String id=a[1]; ColorDef def=service.get(id); if(def==null){ s.sendMessage(plugin.msg("colorchat.not_found")); return true; } Player p=(Player)s; ItemStack it=new ItemStack(def.material); ItemMeta im=it.getItemMeta(); String name=plugin.getConfig().getString("colorchat.token.name","&d색깔채팅권: {color_name}").replace("{color_name}", def.name); im.setDisplayName(Chat.color(name)); java.util.List<String> lore=new java.util.ArrayList<>(); for(String line:plugin.getConfig().getStringList("colorchat.token.lore")) lore.add(Chat.color(line)); im.setLore(lore); im.getPersistentDataContainer().set(key, PersistentDataType.STRING, def.id); it.setItemMeta(im); p.getInventory().addItem(it); s.sendMessage(Chat.color(plugin.msg("prefix")+plugin.msg("colorchat.granted").replace("{color_name}", def.name))); return true; }
 if("삭제".equalsIgnoreCase(a[0])){ if(!s.isOp()){ s.sendMessage(plugin.msg("colorchat.need_op")); return true; } if(a.length<3){ s.sendMessage("/색깔채팅 삭제 <플레이어> <색깔>"); return true; } Player t=Bukkit.getPlayerExact(a[1]); if(t==null){ s.sendMessage("플레이어 오프라인"); return true; } ColorDef def=service.get(a[2]); if(def==null){ s.sendMessage(plugin.msg("colorchat.not_found")); return true; } service.revoke(t.getUniqueId(), def.id); s.sendMessage(Chat.color(plugin.msg("prefix")+plugin.msg("colorchat.removed").replace("{player}", t.getName()).replace("{color_name}", def.name))); return true; }
 if("목록".equalsIgnoreCase(a[0])){ if(!s.isOp()){ s.sendMessage(plugin.msg("colorchat.need_op")); return true; } if(a.length<2){ s.sendMessage("/색깔채팅 목록 <플레이어>"); return true; } Player t=Bukkit.getPlayerExact(a[1]); if(t==null){ s.sendMessage("플레이어 오프라인"); return true; } PlayerData d=plugin.storage().get(t.getUniqueId()); s.sendMessage(Chat.color(plugin.msg("prefix")+plugin.msg("colorchat.list_header").replace("{player}", t.getName()))); if(d.getColorsOwned().isEmpty()){ s.sendMessage(Chat.color(plugin.msg("colorchat.list_none"))); return true; } for(String id:d.getColorsOwned()){ ColorDef def=service.get(id); String nm=def!=null?def.name:id; s.sendMessage(Chat.color(plugin.msg("colorchat.list_line").replace("{color_id}", id).replace("{color_name}", nm))); } return true; }
 if(s instanceof Player){ gui.open((Player)s); } else { s.sendMessage(plugin.msg("colorchat.need_player")); } return true; }
}